<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zuiqiang.book.dao.BookMapper">
  <resultMap id="BaseResultMap" type="com.zuiqiang.book.domain.Book">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_author" jdbcType="VARCHAR" property="bookAuthor" />
    <result column="book_pub" jdbcType="VARCHAR" property="bookPub" />
    <result column="book_num" jdbcType="INTEGER" property="bookNum" />
    <result column="book_sort" jdbcType="VARCHAR" property="bookSort" />
    <result column="book_record" jdbcType="TIMESTAMP" property="bookRecord" />
    <result column="book_left" jdbcType="INTEGER" property="bookLeft" />
  </resultMap>
  <sql id="Base_Column_List">
    book_id, book_name, book_author, book_pub, book_num, book_sort, book_record, book_left
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zuiqiang.book.domain.Book">
    insert into book (book_id, book_name, book_author, 
      book_pub, book_num, book_sort, 
      book_record, book_left,book_img,book_introduce)
    values (#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookAuthor,jdbcType=VARCHAR}, 
      #{bookPub,jdbcType=VARCHAR}, #{bookNum,jdbcType=INTEGER}, #{bookSort,jdbcType=VARCHAR}, 
      #{bookRecord,jdbcType=TIMESTAMP}, #{bookLeft,jdbcType=INTEGER},#{bookImg,jdbcType=INTEGER},
      #{bookIntroduce,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zuiqiang.book.domain.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookAuthor != null">
        book_author,
      </if>
      <if test="bookPub != null">
        book_pub,
      </if>
      <if test="bookNum != null">
        book_num,
      </if>
      <if test="bookSort != null">
        book_sort,
      </if>
      <if test="bookRecord != null">
        book_record,
      </if>
      <if test="bookLeft != null">
        book_left,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null">
        #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookPub != null">
        #{bookPub,jdbcType=VARCHAR},
      </if>
      <if test="bookNum != null">
        #{bookNum,jdbcType=INTEGER},
      </if>
      <if test="bookSort != null">
        #{bookSort,jdbcType=VARCHAR},
      </if>
      <if test="bookRecord != null">
        #{bookRecord,jdbcType=TIMESTAMP},
      </if>
      <if test="bookLeft != null">
        #{bookLeft,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zuiqiang.book.domain.Book">
    update book
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null">
        book_author = #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookPub != null">
        book_pub = #{bookPub,jdbcType=VARCHAR},
      </if>
      <if test="bookNum != null">
        book_num = #{bookNum,jdbcType=INTEGER},
      </if>
      <if test="bookSort != null">
        book_sort = #{bookSort,jdbcType=VARCHAR},
      </if>
      <if test="bookRecord != null">
        book_record = #{bookRecord,jdbcType=TIMESTAMP},
      </if>
      <if test="bookLeft != null">
        book_left = #{bookLeft,jdbcType=INTEGER},
      </if>
      <if test="bookImg != null">
        book_img = #{bookImg,jdbcType=INTEGER},
      </if>
      <if test="bookIntroduce != null">
        book_introduce = #{bookIntroduce,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zuiqiang.book.domain.Book">
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_author = #{bookAuthor,jdbcType=VARCHAR},
      book_pub = #{bookPub,jdbcType=VARCHAR},
      book_num = #{bookNum,jdbcType=INTEGER},
      book_sort = #{bookSort,jdbcType=VARCHAR},
      book_record = #{bookRecord,jdbcType=TIMESTAMP},
      book_left = #{bookLeft,jdbcType=INTEGER}
       book_img = #{bookImg,jdbcType=INTEGER}
        book_introduce = #{bookIntroduce,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <select id="selectBooksByConditions" resultMap="BaseResultMap">
    select  book_name,book_sort,book_author,book_pub,book_num FROM book
    <where>
      <if test="bookSort !=null">
        book_sort=#{bookSort}
      </if>
      <if test="bookPub !=null">
        and book_pub=#{bookPub}
      </if>

    </where>
  </select>
  <select id="selectBooksByConditions0" resultMap="BaseResultMap">
    select  book_name,book_sort,book_author,book_pub,book_num FROM book
    <where>
      <if test="bookSort !=null">
        book_sort=#{bookSort}
      </if>
      <if test="bookPub !=null">
        and book_pub=#{bookPub}
      </if>
      <if test="status !=null">
        and book_num=0
      </if>

    </where>
  </select>
  <select id="selectBooksByConditions1" resultMap="BaseResultMap">
    select  book_name,book_sort,book_author,book_pub,book_num FROM book
    <where>
      <if test="bookSort !=null">
        book_sort=#{bookSort}
      </if>
      <if test="bookPub !=null">
        and book_pub=#{bookPub}
      </if>
      <if test="status !=null">
        and book_num &gt; 0
      </if>

    </where>
  </select>
  <select id="getBookByInput" resultMap="BaseResultMap">
    select book_name,book_sort,book_author,book_pub,book_num FROM book WHERE book_name LIKE '%' #{keyword} '%'
  </select>
</mapper>